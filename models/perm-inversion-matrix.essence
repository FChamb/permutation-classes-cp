language Essence 1.3

given n : int
find perm : matrix indexed by [int(0..length+1)] of int(0..length+1)

$ Simple permutations do not contain intervals.
$ An interval is a set of contiguous indices such that the values are also contiguous.

$ matrix is a permutation
such that
    $ Fix start and end value in permutation
    perm[0] = 0,
    perm[length+1] = length+1,
    $ Make sure that all members of the permutation are different
    allDiff(perm)


$ the inversion count
find inversionCount : int(0..length**2) $ upper bound is not tight
such that
    inversionCount =
        sum([ 1
            | i,j : int(1..length)
            , i < j
            , perm[i] > perm[j]
            ])
